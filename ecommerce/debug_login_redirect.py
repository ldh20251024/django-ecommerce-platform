import osimport django# 先设置django环境,才能导入后面那些模块和应用os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce.settings')django.setup()from django.test import Clientfrom django.urls import reversefrom django.contrib.auth import get_user_modelfrom django.conf import settingsfrom shop.models import Category, Productimport uuid# 确保 testserver 在 ALLOWED_HOSTS 中if 'testserver' not in settings.ALLOWED_HOSTS:    settings.ALLOWED_HOSTS.append('testserver')User = get_user_model()# 创建测试客户端client = Client()# 创建测试用户user = User.objects.create_user(    username='testuser',    email='test@example.com',    password='testpass123')try:    print("=== 测试登录重定向功能 ===")    # 测试1：直接访问登录页面（没有next参数）    print("测试1：直接访问登录页面")    response = client.get(reverse('accounts:login'))    print(f"状态码: {response.status_code}")    # 检查表单中是否有next隐藏字段    content = response.content.decode()    if 'name="next"' in content:        print("✓ 找到next隐藏字段")    else:        print("✗ 未找到next隐藏字段")    # 测试2：访问受保护页面（订单创建），应该重定向到登录页面并携带next参数    print("\n测试2：访问受保护的订单创建页面")    response = client.get(reverse('orders:order_create'), follow=True)    print(f"最终状态码: {response.status_code}")    # 检查是否重定向到登录页面并携带next参数    if response.redirect_chain:        last_redirect = response.redirect_chain[-1][0]        print(last_redirect)        if 'accounts/login' in last_redirect and 'next=' in last_redirect:            print("✓ 正确重定向到登录页面并携带next参数")        else:            print("✗ 重定向不正确")            print(f"重定向链: {response.redirect_chain}")    else:        print("✗ 没有发生重定向")    # 测试3：登录后重定向    print("\n测试3：登录后重定向测试")    unique_id = uuid.uuid4()    unique_id_str = str(unique_id)    category = Category.objects.create(        name='test' + unique_id_str,        slug='testslug' + unique_id_str    )    product = Product.objects.create(        category=category,        name='iPhone 13',        slug='iphone-13',        description='苹果手机',        price=5999.00,        stock=100    )    # 在登录前先添加商品到购物车（匿名购物车）    client.post(reverse('cart:cart_add', args=[product.id]), {        'quantity': 2,        'update': False    })    # 先访问订单创建页面获取next参数    client.get(reverse('orders:order_create'))    # 登录    login_url = reverse('accounts:login')    response = client.post(login_url, {        'username': 'testuser',        'password': 'testpass123',        'next': reverse('orders:order_create')    }, follow=True)    print(f"登录后状态码: {response.status_code}")    print(f"登录后URL: {response.wsgi_request.path}")    if response.wsgi_request.path == reverse('orders:order_create'):        print("✓ 登录后成功重定向到订单创建页面")    else:        print("✗ 登录后重定向失败")        print(f"实际路径: {response.wsgi_request.path}")        print(f"期望路径: {reverse('orders:order_create')}")    print("🎉 登录重定向功能测试完成！")finally:    # 清理测试数据    user.delete()